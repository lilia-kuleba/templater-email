{"version":3,"sources":["features/emailTemplater/emailTemplaterAPI.js","features/emailTemplater/emailTemlaterSlice.jsx","features/emailTemplater/ComposeEmailTemplate.jsx","features/emailTemplater/SetValues.jsx","features/emailTemplater/PreviewAndSend.jsx","features/emailTemplater/SuccessNotification.jsx","features/emailTemplater/FailNotification.jsx","App.js","app/store.js","index.js"],"names":["sendEmail","email","fetch","method","headers","body","JSON","stringify","then","response","json","sendNewEmail","createAsyncThunk","a","emailTemplaterSlice","createSlice","name","initialState","recipients","subject","date","location","signature","isSuccess","isFail","step","reducers","changeRecipients","state","action","payload","changeSubject","changeBody","changeStep","changeDate","changeLocation","changeName","changeIsSuccess","changeIsFail","changeSignature","extraReducers","builder","addCase","fulfilled","rejected","actions","selectRecipients","selectSubject","selectBody","selectDate","selectLocation","selectName","selectIsSuccess","selectIsFail","selectSignature","selectStep","ComposeEmailTemplate","useSelector","dispatch","useDispatch","className","type","placeholder","value","onChange","event","target","onClick","SetValues","PreviewAndSend","replace","readOnly","SuccessNotification","timer","useEffect","setTimeout","clearTimeout","FailNotification","App","classNames","store","configureStore","reducer","emailTemplaterReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1c546eb.chunk.js","sourcesContent":["const baseURL = 'https://mock.at.leanylabs.com/email';\r\n\r\nexport function sendEmail(email) {\r\n  return fetch(baseURL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n    },\r\n    body: JSON.stringify(email),\r\n  })\r\n    .then(response => response.json());\r\n}\r\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {sendEmail} from \"./emailTemplaterAPI\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst initialState = {\r\n  recipients: '',\r\n  subject: '',\r\n  body: `Hi {name},\\n\\nWeâ€™d like to invite you to a {subject} on {date} at {location}.\\n\\nThanks,\\n{signature}`,\r\n  date: '',\r\n  location: '',\r\n  name: '',\r\n  signature: '',\r\n  isSuccess: false,\r\n  isFail: false,\r\n  step: 1,\r\n};\r\n\r\nexport const sendNewEmail = createAsyncThunk(\r\n  'emailTemplater/sendEmail',\r\n  async (email) => {\r\n    const response = await sendEmail(email);\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const emailTemplaterSlice = createSlice({\r\n  name: 'emailTemplater',\r\n  initialState,\r\n  reducers: {\r\n    changeRecipients: (state, action) => {\r\n      state.recipients = action.payload;\r\n    },\r\n    changeSubject: (state, action) => {\r\n      state.subject = action.payload;\r\n    },\r\n    changeBody: (state, action) => {\r\n      state.body = action.payload;\r\n    },\r\n    changeStep: (state, action) => {\r\n      state.step += action.payload;\r\n    },\r\n    changeDate: (state, action) => {\r\n      state.date = action.payload;\r\n    },\r\n    changeLocation: (state, action) => {\r\n      state.location = action.payload;\r\n    },\r\n    changeName: (state, action) => {\r\n      state.name = action.payload;\r\n    },\r\n    changeIsSuccess: (state, action) => {\r\n      state.isSuccess = action.payload;\r\n    },\r\n    changeIsFail: (state, action) => {\r\n      state.isFail = action.payload;\r\n    },\r\n    changeSignature: (state, action) => {\r\n      state.signature = action.payload;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(sendNewEmail.fulfilled, (state) => {\r\n        state.isSuccess = true;\r\n      })\r\n      .addCase(sendNewEmail.rejected, (state) => {\r\n        state.isFail = true;\r\n      })\r\n  }\r\n});\r\n\r\nexport const {\r\n  changeRecipients,\r\n  changeSubject,\r\n  changeBody,\r\n  changeStep,\r\n  changeDate,\r\n  changeLocation,\r\n  changeName,\r\n  changeIsSuccess,\r\n  changeIsFail,\r\n  changeSignature,\r\n} = emailTemplaterSlice.actions;\r\n\r\nexport const selectRecipients = state => state.email.recipients;\r\nexport const selectSubject = state => state.email.subject;\r\nexport const selectBody = state => state.email.body;\r\nexport const selectDate = state => state.email.date;\r\nexport const selectLocation = state => state.email.location;\r\nexport const selectName = state => state.email.name;\r\nexport const selectIsSuccess = state => state.email.isSuccess;\r\nexport const selectIsFail = state => state.email.isFail;\r\nexport const selectSignature = state => state.email.signature;\r\nexport const selectStep = state => state.email.step;\r\n\r\nexport default emailTemplaterSlice.reducer;\r\n","import React from 'react';\r\nimport './ComposeEmailTemplate.scss';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n  changeBody,\r\n  changeRecipients, changeStep,\r\n  changeSubject,\r\n  selectBody,\r\n  selectRecipients,\r\n  selectStep,\r\n  selectSubject\r\n} from \"./emailTemlaterSlice\";\r\n\r\nexport const ComposeEmailTemplate = () => {\r\n  const recipients = useSelector(selectRecipients);\r\n  const subject = useSelector(selectSubject);\r\n  const body = useSelector(selectBody);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <form className=\"main__form form\">\r\n      <div className=\"form__title\">Compose Email Template</div>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          Recipients\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"{recipient}\"\r\n          value={recipients}\r\n          onChange={event => {\r\n            dispatch(changeRecipients(event.target.value))\r\n          }}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          Subject\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"{subject}\"\r\n          value={subject}\r\n          onChange={event => {\r\n            dispatch(changeSubject(event.target.value))\r\n          }}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          Body\r\n        </span>\r\n        <textarea\r\n          className=\"form__textarea\"\r\n          value={body}\r\n          onChange={event => {\r\n            dispatch(changeBody(event.target.value))\r\n          }}\r\n        />\r\n      </label>\r\n      <button\r\n        className=\"form__nextButton button\"\r\n        type=\"button\"\r\n        onClick={() => dispatch(changeStep(1))}\r\n      >\r\n        SET VARIABLES\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './ComposeEmailTemplate.scss';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n  changeDate,\r\n  changeLocation,\r\n  changeName,\r\n  changeRecipients,\r\n  changeSignature,\r\n  changeStep,\r\n  changeSubject,\r\n  selectDate,\r\n  selectLocation,\r\n  selectName,\r\n  selectRecipients,\r\n  selectSignature,\r\n  selectSubject\r\n} from \"./emailTemlaterSlice\";\r\n\r\nexport const SetValues = () => {\r\n  const recipients = useSelector(selectRecipients);\r\n  const subject = useSelector(selectSubject);\r\n  const date = useSelector(selectDate);\r\n  const location = useSelector(selectLocation);\r\n  const name = useSelector(selectName);\r\n  const signature = useSelector(selectSignature);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <form className=\"main__form form\">\r\n      <div className=\"form__title\">Set Values</div>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          {\"{recipients}\"}\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"email\"\r\n          placeholder=\"{recipient}\"\r\n          value={recipients}\r\n          onChange={event => {\r\n            dispatch(changeRecipients(event.target.value));\r\n          }}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          {\"{subject}\"}\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"{subject}\"\r\n          value={subject}\r\n          onChange={event => {\r\n            dispatch(changeSubject(event.target.value));\r\n          }}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          {\"{date}\"}\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"date\"\r\n          placeholder=\"{date}\"\r\n          value={date}\r\n          onChange={event => {\r\n            dispatch(changeDate(event.target.value));\r\n          }}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          {\"{location}\"}\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"{location}\"\r\n          value={location}\r\n          onChange={event => {\r\n            dispatch(changeLocation(event.target.value));\r\n          }}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          {\"{name}\"}\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"{name}\"\r\n          value={name}\r\n          onChange={event => {\r\n            dispatch(changeName(event.target.value));\r\n          }}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          {\"{signature}\"}\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"{signature}\"\r\n          value={signature}\r\n          onChange={event => {\r\n            dispatch(changeSignature(event.target.value));\r\n          }}\r\n        />\r\n      </label>\r\n      <div className=\"form__buttonsBlock\">\r\n        <button\r\n          className=\"form__previousButton button\"\r\n          type=\"button\"\r\n          onClick={() => dispatch(changeStep(-1))}\r\n        >\r\n          BACK\r\n        </button>\r\n        <button\r\n          className=\"form__nextButton button\"\r\n          type=\"button\"\r\n          onClick={() => dispatch(changeStep(1))}\r\n        >\r\n          PREVIEW\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './ComposeEmailTemplate.scss';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendNewEmail } from \"./emailTemlaterSlice\";\r\nimport {\r\n  changeBody,\r\n  changeRecipients,\r\n  changeStep,\r\n  changeSubject,\r\n  selectBody,\r\n  selectDate,\r\n  selectLocation,\r\n  selectName,\r\n  selectRecipients,\r\n  selectSignature,\r\n  selectSubject\r\n} from \"./emailTemlaterSlice\";\r\n\r\nexport const PreviewAndSend = () => {\r\n  const recipients = useSelector(selectRecipients);\r\n  const subject = useSelector(selectSubject);\r\n  const date = useSelector(selectDate);\r\n  const location = useSelector(selectLocation);\r\n  const name = useSelector(selectName);\r\n  const signature = useSelector(selectSignature);\r\n  const dispatch = useDispatch();\r\n  const body = useSelector(selectBody)\r\n    .replace('{name}', name)\r\n    .replace('{subject}', subject)\r\n    .replace('{date}', date)\r\n    .replace('{location}', location)\r\n    .replace('{signature}', signature)\r\n\r\n  return (\r\n    <form className=\"main__form form\">\r\n      <div className=\"form__title\">Preview and Send</div>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          Recipients\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          readOnly\r\n          value={recipients}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          Subject\r\n        </span>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          readOnly\r\n          value={subject}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <span className=\"form__text\">\r\n          Body\r\n        </span>\r\n        <textarea\r\n          className=\"form__textarea\"\r\n          readOnly\r\n          value={body}\r\n        />\r\n      </label>\r\n      <div className=\"form__buttonsBlock\">\r\n        <button\r\n          className=\"form__previousButton button\"\r\n          type=\"button\"\r\n          onClick={() => dispatch(changeStep(-1))}\r\n        >\r\n          BACK\r\n        </button>\r\n        <button\r\n          className=\"form__nextButton button\"\r\n          type=\"button\"\r\n          onClick={() => dispatch(sendNewEmail({\r\n            recipients,\r\n            subject,\r\n            body,\r\n          }))}\r\n        >\r\n          SEND\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport './ComposeEmailTemplate.scss';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {changeIsSuccess} from \"./emailTemlaterSlice\";\r\n\r\nexport const SuccessNotification = () => {\r\n  const dispatch = useDispatch();\r\n  let timer;\r\n\r\n  useEffect(() => {\r\n    timer = setTimeout(() => {\r\n      dispatch(changeIsSuccess(false));\r\n    }, 5000);\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"sendStatus\">\r\n      <div className=\"sendStatus__container\">\r\n        <div className=\"sendStatus__color sendStatus__color--green\"/>\r\n        <div className=\"sendStatus__title\">Email sent successfully!</div>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(changeIsSuccess(false));\r\n          clearTimeout(timer);\r\n        }}\r\n        className=\"sendStatus__button\"\r\n      >\r\n        x\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport './ComposeEmailTemplate.scss';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {changeIsFail} from \"./emailTemlaterSlice\";\r\n\r\nexport const FailNotification = () => {\r\n  const dispatch = useDispatch();\r\n  let timer;\r\n\r\n  useEffect(() => {\r\n    timer = setTimeout(() => {\r\n      dispatch(changeIsFail(false));\r\n    }, 5000);\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"sendStatus\">\r\n      <div className=\"sendStatus__container\">\r\n        <div className=\"sendStatus__color sendStatus__color--red\"/>\r\n        <div className=\"sendStatus__title\">Failed to send email!</div>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(changeIsFail(false));\r\n          clearTimeout(timer);\r\n        }}\r\n        className=\"sendStatus__button\"\r\n      >\r\n        x\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport classNames from \"classnames\";\nimport {useSelector} from \"react-redux\";\nimport {selectIsFail, selectIsSuccess, selectStep} from \"./features/emailTemplater/emailTemlaterSlice\";\nimport {ComposeEmailTemplate} from \"./features/emailTemplater/ComposeEmailTemplate\";\nimport {SetValues} from \"./features/emailTemplater/SetValues\";\nimport {PreviewAndSend} from \"./features/emailTemplater/PreviewAndSend\";\nimport {SuccessNotification} from \"./features/emailTemplater/SuccessNotification\";\nimport {FailNotification} from \"./features/emailTemplater/FailNotification\";\n\nfunction App() {\n  const step = useSelector(selectStep);\n  const isSuccess = useSelector(selectIsSuccess);\n  const isFail = useSelector(selectIsFail);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header header\">\n        <div className=\"header__logo\">ET</div>\n        <div className=\"header__title\">Email Templater</div>\n      </header>\n      <main className=\"App__main main\">\n        <ul className=\"main__statusEmail statusEmail\">\n          <li className={classNames(\n            \"statusEmail__item\",\n            \"statusEmail__item--1\",\n            {\"statusEmail__item--active\": step === 1}\n          )}>\n            1\n          </li>\n          <li className={classNames(\n            \"statusEmail__item\",\n            \"statusEmail__item--2\",\n            {\"statusEmail__item--active\": step === 2}\n          )}>\n            2\n          </li>\n          <li className={classNames(\n            \"statusEmail__item\",\n            \"statusEmail__item--3\",\n            {\"statusEmail__item--active\": step === 3}\n          )}>\n            3\n          </li>\n        </ul>\n        {step === 1 && <ComposeEmailTemplate/>}\n        {step === 2 && <SetValues/>}\n        {step === 3 && <PreviewAndSend/>}\n        <div className=\"main__status\">\n          {isSuccess && <SuccessNotification/>}\n          {isFail && <FailNotification/>}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport emailTemplaterReducer from '../features/emailTemplater/emailTemlaterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    email: emailTemplaterReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}